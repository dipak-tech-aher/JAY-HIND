{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation for dtWorks",
    "version": "2.0.0",
    "title": "dtWorks",
    "termsOfService": "",
    "contact": {
      "email": ""
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication Module"
    },
    {
      "name": "Master",
      "description": "Master Data Module"
    },
    {
      "name": "User management",
      "description": "User Module"
    },
    {
      "name": "Interaction management",
      "description": "Interaction Module"
    },
    {
      "name": "Workflow management",
      "description": "Workflow Module"
    },
    {
      "name": "Account management",
      "description": "Account Module"
    },
    {
      "name": "Appointment management",
      "description": "Appointment Module"
    },
    {
      "name": "Billing management",
      "description": "Billing Module"
    },
    {
      "name": "Bulkupload management",
      "description": "Bulkupload Module"
    },
    {
      "name": "Business management",
      "description": "Business Module"
    },
    {
      "name": "Channel Setting management",
      "description": "Channel Setting Module"
    },
    {
      "name": "Common Service management",
      "description": "Common Service Module"
    },
    {
      "name": "Contract management",
      "description": "Contract Module"
    },
    {
      "name": "Customer management",
      "description": "Customer Module"
    },
    {
      "name": "Helpdesk management",
      "description": "Helpdesk Module"
    },
    {
      "name": "Intelligence Corner management",
      "description": "Intelligence Corner Module"
    },
    {
      "name": "Invoice management",
      "description": "Invoice Module"
    },
    {
      "name": "Order management",
      "description": "Order Module"
    },
    {
      "name": "Organization management",
      "description": "Organization Module"
    },
    {
      "name": "Product management",
      "description": "Product Module"
    },
    {
      "name": "Profile management",
      "description": "Profile Module"
    },
    {
      "name": "Report management",
      "description": "Report Module"
    },
    {
      "name": "Setting management",
      "description": "Setting Module"
    },
    {
      "name": "Watsapp management",
      "description": "Watsapp Module"
    },
    {
      "name": "Chat management",
      "description": "Chat Module"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register the user from Register Page",
        "description": "",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for register user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/register": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Customer registration via Mobile APP",
        "description": "",
        "operationId": "customer-registration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for register customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer-registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/get-customer": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get customer",
        "description": "",
        "operationId": "Get-Customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get-Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/details/history": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Customer Details History",
        "description": "Customer Details-History",
        "operationId": "Customer Details-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Customer Details History",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer Details-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/address/history/": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Search Customer Address History",
        "description": "Search Customer Address History",
        "operationId": "CustomerAddress-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Search Customer Address History",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerAddress-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/create": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Create Customer",
        "description": "Customer creation",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create-Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/update-status": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Status update",
        "description": "Customer creation",
        "operationId": "update-status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Status update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update-status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/order-count": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Order Count",
        "description": "Order Count",
        "operationId": "Order-Count",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Order Count",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order-Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/interaction-count": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Interaction Count",
        "description": "",
        "operationId": "Interaction-Count",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Interaction Count",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Interaction-Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/verify-customers": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Customer verification",
        "description": "",
        "operationId": "Verify-Customers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Customer verification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Verify-Customers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/bulk-create": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Create Bulk Customer",
        "description": "",
        "operationId": "Bulk-Customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create Bulk Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bulk-Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/s-analyzer": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "Sentiment Analysis",
        "description": "",
        "operationId": "Sentiment-Analysis",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Sentiment Analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sentiment-Analysis"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/prediction": {
      "post": {
        "tags": [
          "Customer management"
        ],
        "summary": "prediction",
        "description": "",
        "operationId": "Prediction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Prediction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prediction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/deactivate/{customerUuid}": {
      "put": {
        "tags": [
          "Customer management"
        ],
        "summary": "Deactivate Customer",
        "description": "",
        "operationId": "Deactivate-Customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Deactivate Customer by customerUuid",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Deactivate Customer by customerUuid",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deactivate-Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/{customerUuid}": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get Customer by id",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "Get Customer by id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/address/{customerUuid}": {
      "put": {
        "tags": [
          "Customer management"
        ],
        "summary": "Update customer address by address no",
        "description": "",
        "operationId": "update-customer-address",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Schema for update customer address",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for update customer address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update-customer-address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/address/{customerUuid}": {
      "delete": {
        "tags": [
          "Customer management"
        ],
        "summary": "Delete customer address by address no",
        "description": "",
        "operationId": "delete-customer-address",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Schema for delete customer address",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for delete customer address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete-customer-address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/contact/{customerUuid}": {
      "put": {
        "tags": [
          "Customer management"
        ],
        "summary": "Update customer contact by contact no",
        "description": "",
        "operationId": "update-customer-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Schema for update customer contact",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for update customer contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update-customer-contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/common/upload-files": {
      "post": {
        "tags": [
          "Common Service management"
        ],
        "summary": "Upload Files",
        "description": "Upload Files",
        "operationId": "Upload-Files",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "entityType",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Upload Files",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upload-Files"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contact/{customerUuid}": {
      "delete": {
        "tags": [
          "Customer management"
        ],
        "summary": "Delete customer contact by contact no",
        "description": "",
        "operationId": "delete-customer-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Schema for delete customer contact",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for delete customer contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete-customer-contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/recent-activities/{customerUuid}": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Customer recent activities",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "customerUuid",
            "description": "Schema for customer recent activities",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-upcoming-appoinments": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Upcoming Appointments",
        "description": "",
        "operationId": "Upcoming-Appointments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "valueParam",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Upcoming Appointments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upcoming-Appointments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-closed-appoinments": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Closed Appointments",
        "description": "",
        "operationId": "Closed-Appointments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "valueParam",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Closed Appointments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Closed-Appointments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-appoinments-by-query": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Appointments By Query",
        "description": "",
        "operationId": "AppointmentsBy-Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "valueParam",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Get Upcoming Appointments",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Appointments By Query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsBy-Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-appoinments-reminder": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Appointments Reminder",
        "description": "",
        "operationId": "AppointmentsBy-Reminder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Appointments Reminder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsBy-Reminder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-slots": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Slots",
        "description": "",
        "operationId": "Get-Slots",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Slots",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Slots"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-appoinment-events": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "getAppoinmentEvents",
        "description": "",
        "operationId": "Appoinment-Events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Appoinment Events",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appoinment-Events"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-top-performance": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Top Performance",
        "description": "",
        "operationId": "Top-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Top Performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Top-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/re-assign-appoinment": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "ReAssign Appoinment",
        "description": "",
        "operationId": "ReAssign-Appoinment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "ReAssign Appoinment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReAssign-Appoinment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/update-appoinment-status": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "update the Appoinment Status",
        "description": "",
        "operationId": "updateAppoinment-Status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "update the Appoinment Status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAppoinment-Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/available-agent": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Available Agents",
        "description": "Available Agents",
        "operationId": "Available-Agents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Available Agents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Available-Agents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/available-slot": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Slot available",
        "description": "Slot available",
        "operationId": "availables-Slot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Slot available",
            "required": true,
            "schema": {
              "$ref": "#/definitions/availables-Slot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/re-schedule-appoinment": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Appointment Reschedule",
        "description": "Appointment Reschedule",
        "operationId": "Reschedule-Appointment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Slot available",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reschedule-Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-appointment-locations": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Appoinment Location Data",
        "description": "Appoinment Location Data",
        "operationId": "Appoinment-Location",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Appoinment Location Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appoinment-Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-team-past-history-graph": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Team Past History Graph",
        "description": "Get Team Past History Graph",
        "operationId": "TeamPastHistory-Graph",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Appoinment Location Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamPastHistory-Graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-performance": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Performance",
        "description": "Get Performance",
        "operationId": "Get-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-based-on-type": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Appointment By Type",
        "description": "Get Appointment By Type",
        "operationId": "AppointmentBy-Type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Appointment By Type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentBy-Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-based-on-user-group": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Appointment By UserGroup",
        "description": "Get Appointment By UserGroup",
        "operationId": "AppointmentBy-UserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Appointment By UserGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentBy-UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/get-past-history-graph": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Past History Graph",
        "description": "Get  Past History Graph",
        "operationId": "PastHistory-Graph",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Appoinment Location Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PastHistory-Graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/appoinment-history": {
      "post": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Appoinment History",
        "description": "Appoinment History",
        "operationId": "Appoinment-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Slot available",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appoinment-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "login",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "schema for login. Channel value will be, for Web login: 'WEB' and for Mobile App: 'MOBILE_APP'. Device ID is not required when channel is 'WEB'",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/send-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "send otp to user",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "channel source",
            "required": true,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "Source will be 'LOGIN' or 'REGISTER'",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for send OTP",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sentOtp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/send-forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request for forgot password",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for forgot password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/forgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request for reset password",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for reset password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/token/:inviteToken": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request for token",
        "description": "",
        "operationId": "getUserByToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "inviteToken",
            "in": "path",
            "description": "invite token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/verify-otp/{reference}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Otp verification",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "path",
            "description": "verify otp",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/logout/{id}": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request for logout user",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/session": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "switch role user",
        "description": "",
        "operationId": "userId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for switch role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/switchRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/verify-otp/": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "verify-otp from user",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "path",
            "description": "reference",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "channel source",
            "type": "string"
          },
          {
            "name": "otp",
            "in": "query",
            "description": "One time password",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "To get Refresh Token",
        "description": "",
        "operationId": "refreshToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/get-accountid-list/:customerUuid": {
      "get": {
        "tags": [
          "Account management"
        ],
        "summary": "get account id list",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "reference",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/appointment/:for/:id": {
      "get": {
        "tags": [
          "Appointment management"
        ],
        "summary": "Get Appointments",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "for",
            "in": "path",
            "description": "reference",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "reference",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/calendar/search": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get holiday Masters",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/code-types": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get Code Type List",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/:code": {
      "put": {
        "tags": [
          "Business management"
        ],
        "summary": "Update Business Parameter",
        "description": "Update Business Parameter",
        "operationId": "UpdateBusiness-Parameter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "path",
            "description": "Update Business Parameter",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update Business Parameter",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/UpdateBusiness-Parameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/list/:code": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Getting Business Parameter  details by id",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "codlimit",
            "in": "path",
            "required": true,
            "description": "Getting Business Parameter  details by code",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "get page",
            "type": "string"
          },
          {
            "name": "all",
            "in": "query",
            "required": true,
            "description": " ",
            "type": "string"
          },
          {
            "name": "excel",
            "in": "query",
            "required": true,
            "description": "get excel",
            "type": "string"
          },
          {
            "name": "filters",
            "in": "query",
            "required": true,
            "description": "get filters",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/holiday/search": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get Holiday Master",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "calendarUuid",
            "in": "query",
            "required": true,
            "description": "Get Holiday Master",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/check-roster": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get check roaster",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "calendarId",
            "in": "query",
            "required": true,
            "description": "Get calendarId ",
            "type": "string"
          },
          {
            "name": "shiftId",
            "in": "query",
            "required": true,
            "description": "Get shiftIdr",
            "type": "string"
          },
          {
            "name": "appointmentType",
            "in": "query",
            "required": true,
            "description": "Get appointmentType",
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "description": "Get location",
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "description": "Get fromDate",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "description": "Get toDate",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "Get limit",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "Get page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/notify-headers": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get Notification",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/lookup": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get lookup data from Master",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "Reference name for lookup",
            "required": true,
            "type": "string"
          },
          {
            "name": "valueParam",
            "in": "query",
            "description": "Value need to check",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/address-lookup": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "get Address Lookup",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "Reference name for lookup",
            "required": true,
            "type": "string"
          },
          {
            "name": "valueParam",
            "in": "query",
            "description": "Value need to check",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/menu/getMenu": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "get main menu by role",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "get main menu by role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/create": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Create Template Master",
        "description": "Create Template Master",
        "operationId": "CreateTemplate-Master",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create Template Master",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/CreateTemplate-Master"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/set-pinned-status": {
      "put": {
        "tags": [
          "Business management"
        ],
        "summary": "set Pinned Status",
        "description": "set Pinned Status",
        "operationId": "setPinned-Status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "set Pinned Status",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/setPinned-Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/update": {
      "put": {
        "tags": [
          "Business management"
        ],
        "summary": "update Template Master",
        "description": "update Template Master",
        "operationId": "updateTemplate-Master",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "set Pinned Status",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/updateTemplate-Master"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/business-details": {
      "put": {
        "tags": [
          "Business management"
        ],
        "summary": "business Details",
        "description": "business Details",
        "operationId": "Business-Details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Business Details",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Business-Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/get-mapped-unmapped": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Get Mapped Unmapped Template",
        "description": "Get Mapped Unmapped Template",
        "operationId": "MappedUnmapped-Template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Get Mapped Unmapped Template",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/MappedUnmapped-Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/search": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Get Template Details",
        "description": "Get Mapped Unmapped Template",
        "operationId": "Template-Details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "Get Template Details",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Get Template Details",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Template-Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/interaction-template": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Get Interaction Template Details",
        "description": "Get Interaction Template Details",
        "operationId": "InteractionTemplate-Details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "Get Template Details",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Get Template Details",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/InteractionTemplate-Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/available-appointment": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Get Available Appointment",
        "description": "Get Available Appointment",
        "operationId": " Available-Appointment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Get Template Details",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Available-Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/calculate-slots": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "calculate Appointment Slots",
        "description": "calculate Appointment Slots",
        "operationId": "Appointment-Slots",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "calculate Appointment Slots",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Appointment-Slots"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/temp-appointment/create": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " Create temp Appointment",
        "description": "Create temp Appointment",
        "operationId": "temp-Appointment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create temp Appointment",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/temp-Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/mapping/create": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " Create Template Mapping",
        "description": "Create Template Mapping",
        "operationId": "Template-Mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create Template Mapping",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Template-Mapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/template/mapping/update": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " Update Template Mapping",
        "description": "Update Template Mapping",
        "operationId": "UpdateTemplate-Mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update Template Mapping",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/UpdateTemplate-Mapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " create Business Parameter",
        "description": "createBusinessParameter",
        "operationId": "CreateBusiness-Parameter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "create Business Parameter",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/CreateBusiness-Parameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/bulk": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " create Business Parameter Bulk",
        "description": "create Business Parameter Bulk",
        "operationId": "CreateBusinessParameter-Bulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "create Business Parameter-Bulk",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/CreateBusinessParameter-Bulk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/bcae-app-config-create": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "create Bcae AppConfig Record",
        "description": "create Bcae AppConfig Record",
        "operationId": "Bcae-AppConfigRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "create Bcae AppConfig Record",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Bcae-AppConfigRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/master/verify": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": " verify Business Parameter Records",
        "description": " verify Business Parameter Records",
        "operationId": "BusinessParameter-Records",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": " verify Business Parameter Records",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/BusinessParameter-Records"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/frequent": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get frequent interaction data from Master",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer id to get customer specific frequent interaction statement",
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "Profile id to get profile specific frequent interaction statement",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To limit the interaction statements",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/search": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "Get interaction statement by passing query string",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Query string to search problem statement",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/helpdesk": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "search Knowledge Base By Helpdesk",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "s",
            "in": "query",
            "required": true,
            "description": "Query string to search Knowledge Base By Helpdesk",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/charge/scan-ID": {
      "get": {
        "tags": [
          "Master"
        ],
        "summary": "scan document",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/billing/billing-details": {
      "get": {
        "tags": [
          "Billing management "
        ],
        "summary": "get billing details",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "query",
            "required": true,
            "description": "get billing details",
            "type": "string"
          },
          {
            "name": "accountUuid",
            "in": "query",
            "required": true,
            "description": "get billing details",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/billing/lookup": {
      "get": {
        "tags": [
          "Billing management "
        ],
        "summary": "get LookUp Data",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/billing/current/cycle": {
      "get": {
        "tags": [
          "Billing management "
        ],
        "summary": "Get Current Bill",
        "description": "",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/get-knowledge-base": {
      "post": {
        "tags": [
          "Master"
        ],
        "summary": "Get knowledge base Master",
        "description": "",
        "operationId": "getKnowledgeBase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "requestId",
            "description": "To limit the interaction statements",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Create User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getKnowledgeBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/list": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "Request Statement List",
        "description": "",
        "operationId": "RequestStatement-List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To limit the interaction statements",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "To limit the interaction statements",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request Statement List",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestStatement-List"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/create-request-statement": {
      "post": {
        "tags": [
          "Business management"
        ],
        "summary": "create Request Statement",
        "description": "",
        "operationId": "createRequest-Statement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "create Request Statementt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRequest-Statement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/knowledge-Base/edit-request-statement/:id": {
      "put": {
        "tags": [
          "Business management"
        ],
        "summary": "Edit Request Statement",
        "description": "",
        "operationId": "EditRequest-Statement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Edit Request Statement",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "create Request Statementt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditRequest-Statement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Create User",
        "description": "",
        "operationId": "Create User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Create User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/create": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "Create Account",
        "description": "",
        "operationId": "Create-Account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create-Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/update/:accountUuid": {
      "put": {
        "tags": [
          "Account management"
        ],
        "summary": "Update Account",
        "description": "",
        "operationId": "Update-Account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "accountUuid",
            "description": "Update Account",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update-Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/service/update": {
      "put": {
        "tags": [
          "Account management"
        ],
        "summary": "Update Service",
        "description": "",
        "operationId": "Update-Service",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "",
            "description": "Update Account",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update-Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/get-account-list": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "Get Accounts",
        "description": "",
        "operationId": "Get-Accounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true
          },
          {
            "in": "page",
            "name": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/get-expiry-service-list": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "Get Expiry Services",
        "description": "",
        "operationId": "GetExpiry-Services",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true
          },
          {
            "in": "page",
            "name": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetExpiry-Services"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/service/create": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "Create Service",
        "description": "",
        "operationId": "Create-Service",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true
          },
          {
            "in": "page",
            "name": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create-Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/details/history": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "search Account Details History",
        "description": "",
        "operationId": "AccountDetails-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true
          },
          {
            "in": "page",
            "name": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "search Account Details History",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDetails-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/address/history": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "search Account Address History",
        "description": "",
        "operationId": "AccountAddress-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true
          },
          {
            "in": "page",
            "name": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "search Account Address History",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountAddress-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/accounts/get-service-list": {
      "post": {
        "tags": [
          "Account management"
        ],
        "summary": "Get Services",
        "description": "",
        "operationId": "Get-Services",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "limit",
            "name": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Services"
            }
          },
          {
            "in": "page",
            "name": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Services"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Get-Services"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/approve": {
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Approve User Details",
        "description": "",
        "operationId": "Approve User Details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Approve role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/approveUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/switch-user": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "User management Switch User",
        "description": "",
        "operationId": "Switch User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/get-my-team-members": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get MyTeam Members",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/search/:userId": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get User",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Get User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/get-managerlist": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get Manager List",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/get-workflow/:workflowId": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Workflow",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "Get Workflow",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/get-workflow-list": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Workflow List",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "params",
            "description": "Limit",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "params",
            "description": "page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/get-status": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Workflow State",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "Limit",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "query",
            "description": "page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/db-schema-info": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get DBSchema Info",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/org-hierarchy-roles": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get OrgHierarchy With Roles",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/workflow/task-details": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Task Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "query",
            "description": "entity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/search": {
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Search User",
        "description": "",
        "operationId": "Search User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for search User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/searchUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/update/{userId}": {
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Update User Details",
        "description": "",
        "operationId": "userId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for switch role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/search/{userId}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Search User based on UserId",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/by-role": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get User list by role",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "deptId",
            "in": "query",
            "description": "Department id",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "role Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contract/count": {
      "get": {
        "tags": [
          "Contract management"
        ],
        "summary": "Get Monthly Contract Counts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contract/re-generate": {
      "get": {
        "tags": [
          "Contract management"
        ],
        "summary": "Get ReGenerate Contracts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contract/generate-unbilled-contract": {
      "get": {
        "tags": [
          "Contract management"
        ],
        "summary": "Get Monthly Contract Counts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentMonth",
            "in": "query",
            "description": "Get Monthly Contract Counts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contract/generate-scheduled-contracts": {
      "get": {
        "tags": [
          "Contract management"
        ],
        "summary": " Generate Scheduled Monthly Contracts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/contract/get-scheduled-contracts/:customerUuid": {
      "get": {
        "tags": [
          "Contract management"
        ],
        "summary": "Get Customer Scheduled Monthly Contracts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "Get Customer Scheduled Monthly Contracts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/search": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get Customer Scheduled Monthly Contracts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Get Customer Scheduled Monthly Contracts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/customers-interaction/{customerUuid}": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get Customer Interaction",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "Get Customer Interaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/customers-channel-activity/{customerUuid}": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get customer Channel Activity",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "Get customer Channel Activity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/customer/getCustomerRevenue/{customerUuid}": {
      "get": {
        "tags": [
          "Customer management"
        ],
        "summary": "Get Customer Revenue",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "path",
            "description": "Get Customer Revenue",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/helpdesk/profile": {
      "get": {
        "tags": [
          "Helpdesk management"
        ],
        "summary": "Get profile Contact",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "Get profile Contact",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "intelligence-corner/get-events": {
      "get": {
        "tags": [
          "Intelligence Corner"
        ],
        "summary": "Get events",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "query",
            "description": "Get events",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/intelligence-corner/get-product-family": {
      "get": {
        "tags": [
          "Intelligence Corner"
        ],
        "summary": "Get Product Family",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/common/scan-ID": {
      "get": {
        "tags": [
          "Common Service management"
        ],
        "summary": "Get scanned document",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/create": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Create Interaction",
        "description": "",
        "operationId": "Create Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Create Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createInteraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/assignSelf/{intxnId}": {
      "put": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Interaction assign",
        "description": "",
        "operationId": "intxnId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "intxnId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Assign Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assignInteraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/update/{intxnId}": {
      "put": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Interaction Update",
        "description": "",
        "operationId": "update Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "intxnId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Update Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateInteraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/followUp": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Create Followup Interaction",
        "description": "",
        "operationId": "Create Followup Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Create Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createFollowInteraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/assignSelf/:interactionNumber": {
      "put": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Assign Interaction",
        "description": "",
        "operationId": "Assign-Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Assign Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assign-Interaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/cancel/:interactionNumber": {
      "put": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Cancel Interaction",
        "description": "",
        "operationId": "Cancel-Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Cancel Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cancel-Interaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/workFlowTest": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "workFlow Test",
        "description": "",
        "operationId": "Interaction-Flow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Interaction Flow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Interaction-Flow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/flow/:intxnNo": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Interaction Flow",
        "description": "",
        "operationId": "workFlow-Test",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "intxnNo",
            "in": "path",
            "required": true,
            "description": "workFlow Test ",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "workFlow Test",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workFlow-Test"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/conversation-interaction": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Conversation Interaction",
        "description": "",
        "operationId": "Conversation-Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Conversation Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Conversation-Interaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/create-request": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Create Request",
        "description": "",
        "operationId": "Create-Request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/search": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "search Interaction",
        "description": "",
        "operationId": "Search-Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "search Interaction",
            "schema": {
              "$ref": "#/definitions/Search-Interaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-assigned-interactions": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Assigned Interactions",
        "description": "",
        "operationId": "Assigned-Interactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Assigned Interactions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assigned-Interactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-assigned-orders": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Assigned Orders",
        "description": "",
        "operationId": "Assigned-Orders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Assigned Orders",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assigned-Orders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-assigned-to-me-tickets": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Assigned To Me Tickets",
        "description": "",
        "operationId": "AssignedToMe-Tickets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Assigned To Me Tickets",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignedToMe-Tickets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-assigned-interactions": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "My Team Assigned Interactions",
        "description": "",
        "operationId": "TeamAssigned-Interactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "My Team Assigned Interactions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamAssigned-Interactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-assigned-orders": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "My Team Assigned Orders",
        "description": "",
        "operationId": "TeamAssigned-Orders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "My Team Assigned Orders",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamAssigned-Orders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-infomative-details": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get User InfomativeDetails",
        "description": "",
        "operationId": "User-InfomativeDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get User InfomativeDetails",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User-InfomativeDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-infomative-details": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Team InfomativeDetails",
        "description": "",
        "operationId": "Team-InfomativeDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Team InfomativeDetails",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team-InfomativeDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-handling-time": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Handling Times",
        "description": "",
        "operationId": "Handling-Times",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Handling Times",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Handling-Times"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-handling-time": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Handling Time Team",
        "description": "",
        "operationId": "Handling Time-Team",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Handling Time Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Handling Time-Team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/interaction-history-graph": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get My Interaction HistoryGraph",
        "description": "",
        "operationId": "Interaction-HistoryGraph",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get My Interaction HistoryGraphm",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Interaction-HistoryGraph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/interaction-history-graph-team": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Team Interaction History Graph",
        "description": "",
        "operationId": "TeamInteractionHistory-Graph",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Team Interaction History Graph",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamInteractionHistory-Graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-topfive-performer": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Top Five Performer",
        "description": "",
        "operationId": "TopFive-Performer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Top Five Performer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopFive-Performer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-topfive-performer-chat": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Top Five Performer Chat",
        "description": "",
        "operationId": "TopFive-Performer-chat",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Top Five Performer Chat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopFive-Performer-chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-Interaction-insight": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Interaction Insight",
        "description": "",
        "operationId": "Interaction-Insight",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Interaction Insight",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Interaction-Insight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-interaction-overview": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Interaction Overview",
        "description": "",
        "operationId": "Interaction-Overview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Interaction Overview",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Interaction-Overview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-appointment-overview": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Appointment Overview",
        "description": "",
        "operationId": "Appointment-Overview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Appointment Overvieww",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment-Overview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-Interaction-overview": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Team Interaction Overview",
        "description": "",
        "operationId": "TeamInteraction-Overview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Team Interaction Overview",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamInteraction-Overview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-interaction-category-performance": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Interaction Category Performance",
        "description": "",
        "operationId": "InteractionCategory-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Interaction Category Performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InteractionCategory-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-category-performance": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Team Category Performance",
        "description": "",
        "operationId": "TeamCategory-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Team Category Performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamCategory-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-team-assigned-appoinments": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "My Team Assigned Appoinments",
        "description": "",
        "operationId": "TeamAssigned-Appoinments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "My Team Assigned Appoinments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamAssigned-Appoinments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-top-performance": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Top Performance",
        "description": "",
        "operationId": "Top-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Get Top Performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Top-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-assigned-appoinments": {
      "post": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Assigned Appoinments",
        "description": "",
        "operationId": "Assigned-Appoinments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Assigned Appoinments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assigned-Appoinments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/history/:interactionNumber": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get History",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "getFollowUp",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/counts": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get History",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "description": "optional",
            "type": "string"
          },
          {
            "name": "customerUuid",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentStatus",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentDepartment",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentUserId",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "createdRole",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionType",
            "in": "query",
            "description": "optional",
            "required": true,
            "type": "string"
          },
          {
            "name": "me",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "interaction/top-catagory": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get frequent Top Catagory",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "st",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/get-customer-history-count/:customerUid": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get Customer Interaction History Count",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "in": "path",
            "description": "Get Customer Interaction History Count",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "interaction/customers-interaction/:customerUuid": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get Customer Interaction",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "description": " Get Customer Interaction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "interaction/get-appointment/:interactionNumber": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": " Get Interaction Appointment",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionNumber",
            "description": " Get Customer Interaction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "invoice/ar-bill/:customerUuid": {
      "get": {
        "tags": [
          "Invoice management"
        ],
        "summary": " Get arBillCounts by BillRefNo",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "description": " Get arBillCounts by BillRefNo",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/invoice/adjustment/:customerUuid": {
      "get": {
        "tags": [
          "Invoice management"
        ],
        "summary": " Get post Bill Adjustment",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "description": " Get post Bill Adjustment by Uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/invoice/payment/:invoiceId": {
      "get": {
        "tags": [
          "Invoice management"
        ],
        "summary": " Get Invoice Payment",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoiceId",
            "description": " Get Invoice Payment by invoiceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/invoice/:invoiceId": {
      "get": {
        "tags": [
          "Invoice management"
        ],
        "summary": " Get Invoice By Id",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoiceId",
            "description": " Get Customer Interaction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/search": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": " search Order",
        "description": "",
        "operationId": "Search-Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Search-Order"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Search-Order"
            }
          },
          {
            "name": "body",
            "description": "Search Order",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Search-Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/create": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": " create Order",
        "description": "",
        "operationId": "Create-Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Create Order",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Create-Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/edit/:orderNo": {
      "put": {
        "tags": [
          "Order management"
        ],
        "summary": "Edit the Order",
        "description": "",
        "operationId": "Edit-Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Edit the Order",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Edit-Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/cancel/:orderNo": {
      "put": {
        "tags": [
          "Order management"
        ],
        "summary": "Cancel the Order",
        "description": "",
        "operationId": "Cancel-Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderNo",
            "description": "Cancel the Order",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Cancel the Order",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Cancel-Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/followUp": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Add FollowUp",
        "description": "",
        "operationId": "Add-FollowUp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search Order",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Add-FollowUp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/cancel": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Cancel Orders",
        "description": "",
        "operationId": "Cancel-Orders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Cancel Orders",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Cancel-Orders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/list": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get Order List based On ConversationId",
        "description": "",
        "operationId": "Order-List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Get Order List based On ConversationId",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Order-List"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/order-address": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get Address based On OrderId",
        "description": "",
        "operationId": "Addressbased-OrderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Get Address based On OrderId",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/ Addressbased-OrderId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/update-order-address": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Update Order Address",
        "description": "",
        "operationId": "UpdateOrder-Address",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Update Order Address",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/UpdateOrder-Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/flow/:orderNo": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "get order flow",
        "description": "",
        "operationId": "GetOrder-flow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderNo",
            "description": "get order flow",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Update Order Address",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/UpdateOrder-Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/order-history-graph": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get My Order History",
        "description": "",
        "operationId": "GetMyOrder-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Update Order Address",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/GetMyOrder-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/order-history-graph-team": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get Team Order History",
        "description": "",
        "operationId": "TeamOrder-History",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Get Team Order History",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/TeamOrder-History"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-handling-time": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Handling Time",
        "description": "",
        "operationId": "Handling-Time",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Handling Time",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Handling-Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-team-handling-time": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Team handling time",
        "description": "",
        "operationId": "Team-Handling-Time",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team handling time",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/Team-Handling-Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-order-category-performance": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get Order Category Performance",
        "description": "",
        "operationId": "OrderCategory-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Get Order Category Performance",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/OrderCategory-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-top-performance": {
      "post": {
        "tags": [
          "Order management"
        ],
        "summary": "Get Top Performance",
        "description": "",
        "operationId": "GetTop-Performance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Get Top Performance",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/GetTop-Performance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/history/:orderNo": {
      "get": {
        "tags": [
          "Order management"
        ],
        "summary": " Get Order History by orderNo",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderNo",
            "description": " Get Order History by orderNo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "getFollowUp",
            "description": "",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/counts": {
      "get": {
        "tags": [
          "Order management"
        ],
        "summary": " Get Counts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUuid",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "isClosedOnly",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentStatus",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentRole",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentDepartment",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentUserId",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "createdDepartment",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "createdRole",
            "description": " Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderType",
            "description": "Optional",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-customer-history-count/:customerUid": {
      "get": {
        "tags": [
          "Order management"
        ],
        "summary": " Get Customer Order History Count",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "description": "Get Customer Order History Count by customerUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/order/get-customer-history/:customerUid": {
      "get": {
        "tags": [
          "Order management"
        ],
        "summary": " Get Customer Order History",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerUid",
            "description": " Get Customer Order History by customerUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/organization/search/:id?": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": "Get Organization By id",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Get Organization By id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": " Get Role",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/role-family": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": " Get Role Family",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/search/:id": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": " Get Role Family",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Get Role By id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/modules": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": " Get Role Family",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/report/token/:accessKey": {
      "get": {
        "tags": [
          "Report management"
        ],
        "summary": " Get Smarten BI Token",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessKey",
            "description": "Get Smarten BI Token by accessKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/report/:id": {
      "get": {
        "tags": [
          "Report management"
        ],
        "summary": " Get Smarten BI Dashboard",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Get Smarten BI Dashboard",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/report/nlp-token": {
      "get": {
        "tags": [
          "Report management"
        ],
        "summary": " Get Smarten BI Dashboard",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/asset/:type": {
      "get": {
        "tags": [
          "Setting management"
        ],
        "summary": " Get Portal Setting",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/product/": {
      "get": {
        "tags": [
          "Product management"
        ],
        "summary": "Get Products",
        "description": "Get Products",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceType",
            "description": "Optional",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCategory",
            "description": "Optional",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/product/get-task-product-map": {
      "post": {
        "tags": [
          "Product management"
        ],
        "summary": "Get Task Product Mapping",
        "description": "",
        "operationId": "TaskProduct-Mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCategory",
            "description": "Get Task Product Mapping",
            "in": "query",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/TaskProduct-Mapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/history/{intxnId}": {
      "get": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Get Workflow Transaction History",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "intxnId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "getFollowUp",
            "in": "query",
            "description": "Get follow condition",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/interaction/cancel/{intxnId}": {
      "put": {
        "tags": [
          "Interaction management"
        ],
        "summary": "Interaction Cancel",
        "description": "",
        "operationId": "Cancel Interaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "intxnId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Update Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cancelInteraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "workflow/create": {
      "post": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Create Workflow Template",
        "description": "",
        "operationId": "Create Workflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Create Workflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "workflow/update/{workflowId}": {
      "put": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Update Workflow Template",
        "description": "",
        "operationId": "update Workflow Template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Update Interaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "workflow/get-workflow-list": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Workflow Template List",
        "description": "",
        "operationId": "Get Workflow Template List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Set record Limit",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Set Page Limit",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "workflow/get-workflow/{workflowId}": {
      "get": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Get Workflow Template by Id",
        "description": "",
        "operationId": "Get Workflow Template by Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "workflow/delete/{workflowId}": {
      "delete": {
        "tags": [
          "Workflow management"
        ],
        "summary": "Delete Workflow Template",
        "description": "",
        "operationId": "Delete Workflow Template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "interaction Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/common/scan-document": {
      "post": {
        "tags": [
          "Common Service management"
        ],
        "summary": "Scan ID card",
        "description": "",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for scan document user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/scan-document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/helpdesk/monitor": {
      "get": {
        "tags": [
          "Helpdesk management"
        ],
        "summary": "Get Helpdesk count group by Source",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date you want search",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
            "example": "2023-05-15"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/helpdesk/agent-summary": {
      "get": {
        "tags": [
          "Helpdesk management"
        ],
        "summary": "Get Helpdesk agent Summary",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Search Date",
            "required": true,
            "type": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Record Limit",
            "required": true,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Record Page",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/helpdesk/helpdesk-details": {
      "post": {
        "tags": [
          "Helpdesk management"
        ],
        "summary": "Get Helpdesk ",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for get Helpdesk Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/chat-details": {
      "post": {
        "tags": [
          "Chat management"
        ],
        "summary": "Get Chat Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for get Chat Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/all-chat-count": {
      "post": {
        "tags": [
          "Chat management"
        ],
        "summary": "Get Chat Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for get Chat Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/all-chat-count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/agent-summary": {
      "post": {
        "tags": [
          "Chat management"
        ],
        "summary": "Get Chat Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for get Chat Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/all-chat-count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/chat-monitor-counts": {
      "post": {
        "tags": [
          "Chat management"
        ],
        "summary": "Get Chat Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for get Chat Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/all-chat-count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/available-chat-agents": {
      "get": {
        "tags": [
          "Chat management"
        ],
        "summary": "Get Chat Details",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
            "example": "2023-05-15"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Verify User",
        "description": "",
        "operationId": "Verify User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Verify User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verifyUserList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/verify-email": {
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "verify-email",
        "description": "",
        "operationId": "verify-email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for verify-email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verify-emailList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/get-skills-list": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get Skills List",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/users/update-status/{id}": {
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Update User Status Id",
        "description": "",
        "operationId": "id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/organization/search": {
      "get": {
        "tags": [
          "Organization management"
        ],
        "summary": "Search Organization Id ",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/organization/create": {
      "post": {
        "tags": [
          "Organization management"
        ],
        "summary": "create Organizarion",
        "description": "",
        "operationId": "create Organizarion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for create Organizarion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/organization/update": {
      "put": {
        "tags": [
          "Organization management"
        ],
        "summary": "Update Organizarion",
        "description": "",
        "operationId": "Update Organizarion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Update Organizarion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/create": {
      "post": {
        "tags": [
          "role management"
        ],
        "summary": "create role",
        "description": "",
        "operationId": "create role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for create role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createrole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/update": {
      "put": {
        "tags": [
          "role management"
        ],
        "summary": "update role",
        "description": "",
        "operationId": "update role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for update role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updaterole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/verify": {
      "post": {
        "tags": [
          "role management"
        ],
        "summary": "verify role",
        "description": "",
        "operationId": "verify role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for verify role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verify-role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/role/bulk": {
      "post": {
        "tags": [
          "role management"
        ],
        "summary": "bulkupload role",
        "description": "",
        "operationId": "bulkupload role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for bulkupload role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkupload-role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/send-message": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "chat send message",
        "description": "",
        "operationId": "chat send message",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for chat send message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendmessage-chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-service-types": {
      "get": {
        "tags": [
          "Chat management"
        ],
        "summary": "Chat Get ServiceTypes ",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/create-chat": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "create-chat",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for create-chat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create-chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/availableAgents": {
      "get": {
        "tags": [
          "Chat management"
        ],
        "summary": "Chat availableAgents ",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-chat-info": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "get-chat-info",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for getChatInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getChatInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/create-customer": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "Create Customer",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for create-customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-createCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-service-details": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "getServiceDetails",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for getServiceDetails",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-getServiceDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-lookup-list": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "getLookup",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for getLookup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-getLookup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-menu-list": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "getChatMenu",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for getChatMenu",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-getChatMenu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/get-product-list": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "getProducts",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for getProducts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-getProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/update-chat": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "Update chat",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for Update Chat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateChat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    },
    "/chat/inbound-msg": {
      "post": {
        "tags": [
          "chat management"
        ],
        "summary": "Chat inboundMsg",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schema for inboundMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat-inboundMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/FailueResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {}
        },
        "message": {
          "type": "string"
        }
      }
    },
    "FailueResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "scan-document": {
      "type": "object",
      "required": [
        "file",
        "file_back"
      ],
      "properties": {
        "file": {
          "type": "object",
          "description": "It's a file object. If the ID card has details on front of it, send the scanned image here"
        },
        "file_back": {
          "type": "object",
          "description": "It's a file object. If the ID card has details on back of it, send the scanned image here"
        }
      }
    },
    "Upload-Files": {
      "type": "object",
      "required": [
        "file_to_upload"
      ],
      "properties": {
        "file_to_upload": {
          "type": "object",
          "description": "file"
        }
      }
    },
    "login": {
      "type": "object",
      "required": [
        "loginId",
        "password",
        "channel"
      ],
      "properties": {
        "loginId": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "When loginType is OTP, send received OTP as password, if loginType is PASSWORD, send user provided password."
        },
        "channel": {
          "type": "string",
          "description": "Value will be 'WEB' or 'MOBILE_APP'"
        },
        "deviceId": {
          "type": "string",
          "description": "Only required, when 'channel' is 'MOBILE_APP'"
        },
        "userType": {
          "type": "string",
          "description": "Only required, when 'channel' is 'MOBILE_APP' and value will be 'Consumer' or 'Business'"
        },
        "loginType": {
          "type": "string",
          "description": "Only required, when 'channel' is 'MOBILE_APP' and value will be 'OTP' or 'PASSWORD'"
        }
      }
    },
    "sentOtp": {
      "type": "object",
      "required": [
        "reference",
        "firstName"
      ],
      "properties": {
        "reference": {
          "type": "any"
        },
        "firstName": {
          "type": "string"
        },
        "extn": {
          "type": "integer"
        }
      }
    },
    "forgotPassword": {
      "type": "object",
      "required": [
        "loginId",
        "dob",
        "lastName"
      ],
      "properties": {
        "loginId": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "pattern": "YYYY-MM-DD",
          "format": "date"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "resetPassword": {
      "type": "object",
      "required": [
        "password",
        "confirmPassword",
        "email",
        "oldPassword",
        "forceChangePwd"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        },
        "forceChangePwd": {
          "type": "boolean"
        }
      }
    },
    "switchRole": {
      "type": "object",
      "required": [
        "currRole",
        "currDept",
        "currRoleId",
        "currDeptId",
        "currDeptDesc",
        "currRoleDesc"
      ],
      "properties": {
        "currRole": {
          "type": "string"
        },
        "currDept": {
          "type": "string"
        },
        "currRoleId": {
          "type": "integer"
        },
        "currDeptId": {
          "type": "string"
        },
        "currDeptDesc": {
          "type": "string"
        },
        "currRoleDesc": {
          "type": "string"
        }
      }
    },
    "register": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "gender",
        "dob",
        "email",
        "userType",
        "country",
        "extn",
        "contactNo",
        "location"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "contactNo": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "extn": {
          "type": "integer",
          "format": "int32"
        },
        "dob": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "customer-registration": {
      "type": "object",
      "required": [
        "accountType",
        "title",
        "firstName",
        "lastName",
        "gender",
        "emailId",
        "mobileNo",
        "idValue",
        "address",
        "customerNo",
        "birthDate",
        "isVerified",
        "password",
        "confirmPassword"
      ],
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "personal",
            "existing"
          ]
        },
        "title": {
          "type": "string",
          "description": "Only required, when 'accountType' is 'personal'"
        },
        "firstName": {
          "type": "string",
          "description": "Only required, when 'accountType' is 'personal'"
        },
        "lastName": {
          "type": "string",
          "description": "Only required, when 'accountType' is 'personal'"
        },
        "gender": {
          "type": "string",
          "enum": [
            "NC",
            "M",
            "F",
            "TG",
            "NR"
          ],
          "description": "NC => 'Non-binary/Non-conforming', M => 'Male', F => 'Female', TG => 'Transgender', NR => 'Prefer not to respond'"
        },
        "emailId": {
          "type": "string",
          "description": "Required for both 'existing' and 'personal'"
        },
        "mobileNo": {
          "type": "integer",
          "format": "int32",
          "description": "Required for both 'existing' and 'personal'"
        },
        "idType": {
          "type": "string",
          "description": "Required for both 'existing' and 'personal'"
        },
        "idValue": {
          "type": "string",
          "description": "Required for both 'existing' and 'personal'"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "town": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          },
          "description": "Only required, when 'accountType' is 'personal'"
        },
        "customerNo": {
          "type": "string",
          "description": "Only required, when 'accountType' is 'existing'"
        },
        "birthDate": {
          "type": "string",
          "description": "Required for both 'existing' and 'personal'"
        },
        "isVerified": {
          "type": "boolean",
          "description": "Default value will be false. When all the above properties are provided and get verified, change it to true."
        },
        "password": {
          "type": "string",
          "description": "Required if 'isVerified' is true for both 'existing' and 'personal'"
        },
        "confirmPassword": {
          "type": "string",
          "description": "Required if 'isVerified' is true for both 'existing' and 'personal'"
        }
      }
    },
    "Get-Customer": {
      "type": "object",
      "required": [
        "customerUuid",
        "customerNo",
        "status",
        "customerName",
        "emailId",
        "mobileNo",
        "contactNo",
        "idType",
        "idValue",
        "status",
        "filters"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "customerNo": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "contactNo": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "idValue": {
          "type": "string"
        }
      }
    },
    "Customer Details-History": {
      "type": "object",
      "required": [
        "customerUuid",
        "customerNo",
        "filters"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "customerNo": {
          "type": "string"
        }
      }
    },
    "CustomerAddress-History": {
      "type": "object",
      "required": [
        "filters"
      ],
      "properties": {
        "Filters": {
          "type": "string"
        }
      }
    },
    "TaskProduct-Mapping": {
      "type": "object",
      "required": [],
      "properties": {}
    },
    "Create-Customer": {
      "type": "object",
      "required": [
        "idValue",
        "idType",
        "title",
        "source",
        "firstName",
        "lastName",
        "customerAge",
        "gender",
        "birthDate",
        "customerAge",
        "customerCategory",
        "customerClass",
        "registeredNo",
        "registeredDate",
        "nationality",
        "customerPhoto",
        "taxNo",
        "billable",
        "contactPreferences",
        "customerRefNo",
        "customerMartialStatus",
        "occupation",
        "address",
        "contact",
        "attachment"
      ],
      "properties": {
        "idValue": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "mobileNo": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "customerAge": {
          "type": "number"
        },
        "gender": {
          "type": "string"
        },
        "birthDate": {
          "type": "date"
        },
        "registeredNo": {
          "type": "integer"
        },
        "customerClass": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "customerPhoto": {
          "type": "string"
        },
        "taxNo": {
          "type": "string"
        },
        "billable": {
          "type": "string"
        },
        "contactPreferences": {
          "type": "string"
        },
        "customerRefNo": {
          "type": "string"
        },
        "customerMartialStatus": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "object",
          "properties": {
            "contactType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "number"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "number"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "number"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            },
            "secondaryEmail": {
              "type": "string"
            },
            "secondaryContactNo": {
              "type": "number"
            }
          }
        },
        "attachment": {
          "type": "string"
        }
      }
    },
    "update-status": {
      "type": "object",
      "required": [
        "getQuote",
        "customerUuid",
        "accountUuid",
        "customerId",
        "service"
      ],
      "properties": {
        "getQuote": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "accountUuid": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "CreateTemplate-Master": {
      "type": "object",
      "required": [
        "templateName",
        "templateCategory",
        "userGroup",
        "status",
        "eventType",
        "calendarId",
        "appointmentType",
        "location",
        "notifyId",
        "slotsArray",
        "fromDate",
        "toDate",
        "shiftId",
        "rosterDetails"
      ],
      "properties": {
        "templateName": {
          "type": "string"
        },
        "templateCategory": {
          "type": "string"
        },
        "userGroup": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer"
        },
        "appointmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "notifyId": {
          "type": "integer"
        },
        "slotsArray": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "shiftId": {
          "type": "integer"
        },
        "rosterDetails": {
          "type": "string"
        }
      }
    },
    " setPinned-Status": {
      "type": "object",
      "required": [
        "isPinned",
        "entityId",
        "entityCode"
      ],
      "properties": {
        "isPinned": {
          "type": "string"
        },
        "entityId": {
          "type": "integer"
        },
        "entityCode": {
          "type": "string"
        }
      }
    },
    "updateTemplate-Master": {
      "type": "object",
      "required": [
        "templateId",
        "templateName",
        "templateCategory",
        "userGroup",
        "status",
        "eventType",
        "calendarId",
        "appointmentType",
        "location",
        "notifyId",
        "slotsArray",
        "fromDate",
        "toDate",
        "shiftId"
      ],
      "properties": {
        "templateId": {
          "type": "integer"
        },
        "templateName": {
          "type": "string"
        },
        "templateCategory": {
          "type": "string"
        },
        "userGroup": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "calendarId": {
          "type": "integer"
        },
        "appointmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "notifyId": {
          "type": "integer"
        },
        "slotsArray": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "shiftId": {
          "type": "integer"
        }
      }
    },
    "Business-Details": {
      "type": "object",
      "required": [
        "business_type",
        "business_details",
        "address_details",
        "business_representative",
        "business_owners",
        "bank_details"
      ],
      "properties": {
        "business_type": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "business_details": {
          "type": "object",
          "properties": {
            "business_name": {
              "type": "string"
            },
            "business_url": {
              "type": "string"
            },
            "pan": {
              "type": "string"
            },
            "gst": {
              "type": "string"
            },
            "llp_id": {
              "type": "string"
            }
          }
        },
        "address_details": {
          "type": "object",
          "properties": {
            "addr_line_1": {
              "type": "string"
            },
            "addr_line_2": {
              "type": "string"
            },
            "addr_line_3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            }
          }
        },
        "UpdateBusiness-Parameter": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "codeType": {
              "type": "string"
            },
            "mappingPayload": {
              "type": "object"
            }
          }
        },
        " business_representative": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "middle_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "dob": {
              "type": "string"
            },
            "contact_no_pre": {
              "type": "string"
            },
            "contact_no": {
              "type": "string"
            },
            "email_id": {
              "type": "string"
            }
          }
        },
        " business_owners": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "middle_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "dob": {
              "type": "string"
            },
            "contact_no_pre": {
              "type": "string"
            },
            "contact_no": {
              "type": "string"
            },
            "email_id": {
              "type": "string"
            }
          }
        },
        " bank_details": {
          "type": "object",
          "properties": {
            "account_holder_name": {
              "type": "string"
            },
            "ifsc_code": {
              "type": "string"
            },
            "account_no": {
              "type": "string"
            }
          }
        }
      }
    },
    " MappedUnmapped-Template": {
      "type": "object",
      "required": [
        "templateId",
        "mapCategory",
        "serviceCategory",
        "serviceType",
        "tranType",
        "tranCategory",
        "tranPriority"
      ],
      "properties": {
        "templateId": {
          "type": "integer"
        },
        "mapCategory": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranCategory": {
          "type": "integer"
        },
        "tranPriority": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "  InteractionTemplate-Details": {
      "type": "object",
      "required": [
        "mapCategory",
        "customerCategory",
        "serviceCategory",
        "serviceType",
        "tranType",
        "tranCategory",
        "tranPriority"
      ],
      "properties": {
        "mapCategory": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "customerCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranCategory": {
          "type": "integer"
        },
        "tranPriority": {
          "type": "string"
        }
      }
    },
    "Available-Appointment": {
      "type": "object",
      "required": [
        "mapCategory",
        "appointmentType",
        "customerCategory",
        "serviceCategory",
        "serviceType",
        "tranType",
        "tranCategory",
        "tranPriority",
        "location"
      ],
      "properties": {
        "mapCategory": {
          "type": "string"
        },
        "appointmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "customerCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranCategory": {
          "type": "integer"
        },
        "tranPriority": {
          "type": "string"
        }
      }
    },
    "Appointment-Slots": {
      "type": "object",
      "required": [
        "mapCategory",
        "appointmentType",
        "customerCategory",
        "serviceCategory",
        "serviceType",
        "tranType",
        "tranCategory",
        "tranPriority",
        "location"
      ],
      "properties": {
        "mapCategory": {
          "type": "string"
        },
        "appointmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "customerCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranCategory": {
          "type": "integer"
        },
        "tranPriority": {
          "type": "string"
        }
      }
    },
    "temp-Appointment": {
      "type": "object",
      "required": [
        "appointDtlId",
        "productNo",
        "customerId",
        "appointAgentId",
        "operation"
      ],
      "properties": {
        "appointDtlId": {
          "type": "integer"
        },
        "productNo": {
          "type": "integer"
        },
        "customerId": {
          "type": "integer"
        },
        "appointAgentId": {
          "type": "integer"
        },
        "operation": {
          "type": "string"
        }
      }
    },
    "Template-Mapping": {
      "type": "object",
      "required": [
        "mappedTemplate",
        "unMappedTemplate",
        "serviceCategory",
        "serviceType",
        "customerCategory",
        "tranCategory",
        "tranType",
        "tranPriority",
        "mapCategory"
      ],
      "properties": {
        "mappedTemplate": {
          "type": "string"
        },
        "unMappedTemplate": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "customerCategory": {
          "type": "string"
        },
        "tranCategory": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranPriority": {
          "type": "string"
        },
        "mapCategory": {
          "type": "string"
        }
      }
    },
    "UpdateTemplate-Mapping": {
      "type": "object",
      "required": [
        "mappedTemplate",
        "unMappedTemplate",
        "serviceCategory",
        "serviceType",
        "customerCategory",
        "tranCategory",
        "tranType",
        "tranPriority",
        "mapCategory"
      ],
      "properties": {
        "mappedTemplate": {
          "type": "string"
        },
        "unMappedTemplate": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "customerCategory": {
          "type": "string"
        },
        "tranCategory": {
          "type": "string"
        },
        "tranType": {
          "type": "string"
        },
        "tranPriority": {
          "type": "string"
        },
        "mapCategory": {
          "type": "string"
        }
      }
    },
    "CreateBusiness-Parameter": {
      "type": "object",
      "required": [
        "code",
        "description",
        "codeType",
        "mappingPayload"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "codeType": {
          "type": "string"
        },
        "mappingPayload": {
          "type": "object"
        }
      }
    },
    "CreateBusinessParameter-Bulk": {
      "type": "object",
      "required": [
        "code",
        "description",
        "codeType",
        "mappingPayload"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "codeType": {
          "type": "string"
        },
        "mappingPayload": {
          "type": "object"
        }
      }
    },
    "Order-List": {
      "type": "object",
      "required": [
        "conversationUid"
      ],
      "properties": {
        "conversationUid": {
          "type": "string"
        }
      }
    },
    "GetOrder-flow": {
      "type": "object",
      "required": [
        "orderNo"
      ],
      "properties": {
        "orderNo": {
          "type": "string"
        }
      }
    },
    "GetTop-Performance": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate",
        "limit"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "limit": {
          "type": "integer"
        }
      }
    },
    "OrderCategory-Performance": {
      "type": "object",
      "required": [
        "userId",
        "roleId",
        "fromDate",
        "toDate",
        "entityId",
        "limit"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "entityId": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        }
      }
    },
    "Team-Handling-Time": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "Handling-Time": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "TeamOrder-History": {
      "type": "object",
      "required": [
        "userId",
        "teamMemberId",
        "roleId",
        "entityId",
        "serviceType",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "teamMemberId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "GetMyOrder-History": {
      "type": "object",
      "required": [
        "userId",
        "roleId",
        "entityId",
        "serviceType",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "UpdateOrder-Address": {
      "type": "object",
      "required": [
        "orderId",
        "addressType",
        "address1",
        "address2",
        "address3",
        "addrZone",
        "city",
        "district",
        "state",
        "postcode",
        "country",
        "latitude",
        "longitude"
      ],
      "properties": {
        "orderId": {
          "type": "integer"
        },
        "addressType": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "addrZone": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "Addressbased-OrderId": {
      "type": "object",
      "required": [
        "orderId"
      ],
      "properties": {
        "orderId": {
          "type": "integer"
        }
      }
    },
    "Cancel-Orders": {
      "type": "object",
      "required": [
        "conversationUid"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "conversationUid": {
              "type": "string"
            }
          }
        }
      }
    },
    "Add-FollowUp": {
      "type": "object",
      "required": [
        "orderNo",
        "remarks",
        "priorityCode",
        "source"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "orderNo": {
              "type": "string"
            },
            "remarks": {
              "type": "string"
            },
            "priorityCode": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          }
        }
      }
    },
    "Search-Order": {
      "type": "object",
      "required": [
        "searchParams"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "orderNo": {
              "type": "string"
            },
            "orderId": {
              "type": "string"
            },
            "orderUuid": {
              "type": "string"
            },
            "intxnId": {
              "type": "string"
            },
            "customerName": {
              "type": "string"
            },
            "customerNo": {
              "type": "string"
            },
            "customerUuid": {
              "type": "string"
            }
          }
        }
      }
    },
    "Create-Order": {
      "type": "object",
      "required": [
        "customerUuid",
        "orderCategory",
        "orderSource",
        "orderType",
        "orderChannel",
        "orderPriority",
        "billAmount",
        "orderDescription",
        "order"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "orderCategory": {
          "type": "string"
        },
        "orderSource": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "orderChannel": {
          "type": "string"
        },
        "agreementDetail": {
          "type": "object"
        },
        "orderCause": {
          "type": "string"
        },
        "orderPriority": {
          "type": "string"
        },
        "billAmount": {
          "type": "number"
        },
        "orderDescription": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "requestStatement": {
          "type": "string"
        },
        "appointmentList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productNo": {
                "type": "string"
              },
              "customerId": {
                "type": "integer"
              },
              "appointDtlId": {
                "type": "integer"
              },
              "appointAddress": {
                "type": "object",
                "properties": {
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "address3": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "district": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "order": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "orderFamily": {
                "type": "string"
              },
              "orderMode": {
                "type": "string"
              },
              "billAmount": {
                "type": "number"
              },
              "orderDeliveryMode": {
                "type": "string"
              },
              "orderDescription": {
                "type": "string"
              },
              "serviceType": {
                "type": "string"
              },
              "accountUuid": {
                "type": "string"
              },
              "serviceUuid": {
                "type": "string"
              },
              "contactPreference": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rcAmount": {
                "type": "number"
              },
              "nrcAmount": {
                "type": "number"
              },
              "advanceCharge": {
                "type": "string"
              },
              "upfrontCharge": {
                "type": "string"
              },
              "isBundle": {
                "type": "boolean"
              },
              "isSplitOrder": {
                "type": "boolean"
              },
              "prorated": {
                "type": "string"
              },
              "product": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "number"
                    },
                    "productQuantity": {
                      "type": "number"
                    },
                    "productAddedDate": {
                      "type": "date",
                      "format": "YYYY-MM-DD HH:mm:ss"
                    },
                    "billAmount": {
                      "type": "number"
                    },
                    "edof": {
                      "type": "date",
                      "format": "YYYY-MM-DD"
                    },
                    "productSerialNo": {
                      "type": "string"
                    },
                    "contract": {
                      "type": "number"
                    },
                    "bundleId": {
                      "type": "number"
                    },
                    "isBundle": {
                      "type": "boolean"
                    },
                    "rcAmount": {
                      "type": "number"
                    },
                    "nrcAmount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Cancel-Order": {
      "type": "object",
      "required": [
        "orderNo",
        "cancelReason"
      ],
      "properties": {
        "orderNo": {
          "type": "string"
        },
        "cancelReason": {
          "type": "string",
          "required": "Cancellation Reason is Mandatory"
        }
      }
    },
    "Edit-Order": {
      "type": "object",
      "required": [
        "orderNo",
        "userId",
        "roleId",
        "departmentId",
        "status",
        "remarks",
        "payloads"
      ],
      "properties": {
        "orderNo": {
          "type": "string"
        },
        "userId": {
          "type": "number"
        },
        "roleId": {
          "type": "number"
        },
        "departmentId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "payloads": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string"
              },
              "productId": {
                "type": "number"
              },
              "productQuantity": {
                "type": "number"
              },
              "productAddedDate": {
                "type": "date"
              },
              "billAmount": {
                "type": "number"
              },
              "edof": {
                "type": "date"
              },
              "productSerialNo": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Bcae-AppConfigRecord": {
      "type": "object",
      "required": [
        "buttonColor",
        "navbarColor",
        "rosterAutoAssignSetting",
        "userManualPdf",
        "logoImage",
        "appFaq",
        "businessSetup",
        "requestCycleSetupPayload",
        "maxRolesLimit",
        "maxEntityLimit",
        "sessionAutoLogout",
        "loginRetryCount",
        "userLimitPayload",
        "moduleSetup",
        "channelSetupPayload",
        "multiLanguageSelection",
        "portalSetupPayload",
        "appointChannelSetupPayload",
        "notificationSetupPayload"
      ],
      "properties": {
        "buttonColor": {
          "type": "string"
        },
        "navbarColor": {
          "type": "string"
        },
        "rosterAutoAssignSetting": {
          "type": "string"
        },
        "appFaq": {
          "type": "string"
        },
        "logoImage": {
          "type": "string"
        },
        "businessSetup": {
          "type": "string"
        },
        "requestCycleSetupPayload": {
          "type": "string"
        },
        "maxRolesLimit": {
          "type": "number"
        },
        "maxEntityLimit": {
          "type": "number"
        },
        "sessionAutoLogout": {
          "type": "string"
        },
        "loginRetryCount": {
          "type": "number"
        },
        "userLimitPayload": {
          "type": "string"
        },
        "moduleSetup": {
          "type": "string"
        },
        "channelSetupPayload": {
          "type": "string"
        },
        "multiLanguageSelection": {
          "type": "string"
        },
        "portalSetupPayload": {
          "type": "string"
        },
        "appointChannelSetupPayload": {
          "type": "string"
        },
        "notificationSetupPayload": {
          "type": "string"
        }
      }
    },
    "BusinessParameter-Records": {
      "type": "object",
      "required": [
        "list",
        "code"
      ],
      "properties": {
        "list": {
          "type": "array"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "Template-Details": {
      "type": "object",
      "required": [],
      "properties": {
        "templateNo": {
          "type": "integer"
        }
      }
    },
    "Order-Count": {
      "type": "object",
      "required": [
        "customerUuid",
        "currentStatus",
        "currentRole",
        "currentDepartment",
        "currentUserId",
        "createdDepartment",
        "createdRole",
        "orderType"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "currentStatus": {
          "type": "string"
        },
        "currentRole": {
          "type": "string"
        },
        "currentDepartment": {
          "type": "string"
        },
        "currentUserId": {
          "type": "string"
        },
        "createdDepartment": {
          "type": "string"
        },
        "createdRole": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        }
      }
    },
    "Interaction-Count": {
      "type": "object",
      "required": [
        "customerUuid",
        "currentStatus",
        "currentRole",
        "currentDepartment",
        "currentUserId",
        "createdDepartment",
        "createdRole",
        "orderType"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "currentStatus": {
          "type": "string"
        },
        "currentRole": {
          "type": "string"
        },
        "currentDepartment": {
          "type": "string"
        },
        "currentUserId": {
          "type": "string"
        },
        "createdDepartment": {
          "type": "string"
        },
        "createdRole": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        }
      }
    },
    "Verify-Customers": {
      "type": "object",
      "required": [
        "emailId",
        "mobileNo",
        "idValue",
        "postcode"
      ],
      "properties": {
        "emailId": {
          "type": "string"
        },
        "mobileNo": {
          "type": "number"
        },
        "idValue": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        }
      }
    },
    "Bulk-Customer": {
      "type": "object",
      "required": [
        "customerRefNo",
        "customerMartialStatusCode",
        "firstName",
        "lastName",
        "genderCode",
        "birthDate",
        "idTypeCode",
        "idValue",
        "customerCategoryCode",
        "registeredNo",
        "registeredDate",
        "customerClassCode",
        "nationality",
        "contactPreferenceCode",
        "address"
      ],
      "properties": {
        "customerRefNo": {
          "type": "string"
        },
        "customerMartialStatusCode": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "genderCode": {
          "type": "string"
        },
        "birthDate": {
          "type": "integer"
        },
        "idTypeCode": {
          "type": "string"
        },
        "idValue": {
          "type": "string"
        },
        "registeredNo": {
          "type": "string"
        },
        "registeredDate": {
          "type": "integer"
        },
        "customerCategoryCode": {
          "type": "string"
        },
        "customerClassCode": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "contactPreferenceCode": {
          "type": "integer"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "object",
          "properties": {
            "contactType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "number"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "number"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "number"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            }
          }
        }
      }
    },
    "Sentiment-Analysis": {
      "type": "object",
      "required": [
        "inputText"
      ],
      "properties": {
        "inputText": {
          "type": "string"
        }
      }
    },
    "Prediction": {
      "type": "object",
      "required": [
        "input"
      ],
      "properties": {
        "input": {
          "type": "string"
        }
      }
    },
    "Update-Customer": {
      "type": "object",
      "required": [
        "inputText"
      ],
      "properties": {
        "inputText": {
          "type": "string"
        }
      }
    },
    "Deactivate-Customer": {
      "type": "object",
      "required": [
        "idValue",
        "idType",
        "title",
        "source",
        "firstName",
        "lastName",
        "customerAge",
        "gender",
        "birthDate",
        "customerAge",
        "customerCategory",
        "customerClass",
        "registeredNo",
        "registeredDate",
        "nationality",
        "customerPhoto",
        "taxNo",
        "billable",
        "contactPreferences",
        "customerRefNo",
        "customerMartialStatus",
        "occupation",
        "address",
        "contact",
        "attachment"
      ],
      "properties": {
        "idValue": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "mobileNo": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "customerAge": {
          "type": "number"
        },
        "gender": {
          "type": "string"
        },
        "birthDate": {
          "type": "date"
        },
        "registeredNo": {
          "type": "integer"
        },
        "customerClass": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "customerPhoto": {
          "type": "string"
        },
        "taxNo": {
          "type": "string"
        },
        "billable": {
          "type": "string"
        },
        "contactPreferences": {
          "type": "string"
        },
        "customerRefNo": {
          "type": "string"
        },
        "customerMartialStatus": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "object",
          "properties": {
            "contactType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "number"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "number"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "number"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            },
            "secondaryEmail": {
              "type": "string"
            },
            "secondaryContactNo": {
              "type": "number"
            }
          }
        },
        "attachment": {
          "type": "string"
        }
      }
    },
    "get-customer": {
      "type": "object",
      "required": [
        "customerUuid"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Provide customerUuid to get customer"
        }
      }
    },
    "update-customer": {
      "type": "object",
      "required": [
        "details"
      ],
      "properties": {
        "details": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "birthDate": {
              "type": "string"
            },
            "occupation": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            },
            "idType": {
              "type": "string"
            },
            "idValue": {
              "type": "string"
            }
          }
        }
      }
    },
    "update-customer-address": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressNo": {
              "type": "string",
              "description": "On update, send addressNo"
            },
            "isPrimary": {
              "type": "boolean"
            },
            "addressType": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        }
      }
    },
    "update-customer-contact": {
      "type": "object",
      "required": [
        "contact"
      ],
      "properties": {
        "contact": {
          "type": "object",
          "properties": {
            "contactNo": {
              "type": "integer",
              "description": "On update, send contactNo"
            },
            "isPrimary": {
              "type": "boolean"
            },
            "contactType": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "integer"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "integer"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "integer"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            },
            "secondaryEmail": {
              "type": "string"
            },
            "secondaryContactNo": {
              "type": "string"
            }
          }
        }
      }
    },
    "delete-customer-address": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressNo": {
              "type": "integer",
              "description": "On delete, send addressNo"
            }
          }
        }
      }
    },
    "delete-customer-contact": {
      "type": "object",
      "required": [
        "contact"
      ],
      "properties": {
        "contact": {
          "type": "object",
          "properties": {
            "contactNo": {
              "type": "integer",
              "description": "On delete, send contactNo"
            }
          }
        }
      }
    },
    "Upcoming-Appointments": {
      "type": "object",
      "required": [
        "searchParams",
        "filterParams"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "date"
            },
            "toDate": {
              "type": "date"
            }
          }
        },
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        }
      }
    },
    "Closed-Appointments": {
      "type": "object",
      "required": [
        "searchParams",
        "filterParams"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "date"
            },
            "toDate": {
              "type": "date"
            }
          }
        },
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        }
      }
    },
    "AppointmentsBy-Query": {
      "type": "object",
      "required": [
        "searchParams",
        "filterParams"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "date"
            },
            "toDate": {
              "type": "date"
            }
          }
        },
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        }
      }
    },
    "AppointmentsBy-Reminder": {
      "type": "object",
      "required": [
        "searchParams"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "date"
            }
          }
        }
      }
    },
    "Get-Slots": {
      "type": "object",
      "required": [
        "fromDate"
      ],
      "properties": {
        "fromDate": {
          "type": "date",
          "format": "DD-MM-YYYY"
        },
        "mode": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "updateAppoinment-Status": {
      "type": "object",
      "required": [
        "status",
        "appointTxnId"
      ],
      "properties": {
        "status": {
          "type": "string"
        },
        "appointTxnId": {
          "type": "integer"
        }
      }
    },
    "Appoinment-History": {
      "type": "object",
      "required": [
        "tran_category_type"
      ],
      "properties": {
        "tran_category_type": {
          "type": "string"
        }
      }
    },
    "PastHistory-Graph": {
      "type": "object",
      "required": [
        "userId ",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "AppointmentBy-UserGroup": {
      "type": "object",
      "required": [
        "filterParams ",
        "searchParams"
      ],
      "properties": {
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        },
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "string"
            },
            "toDate": {
              "type": "date"
            }
          }
        }
      }
    },
    "AppointmentBy-Type": {
      "type": "object",
      "required": [
        "filterParams ",
        "searchParams"
      ],
      "properties": {
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        },
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "string"
            },
            "toDate": {
              "type": "date"
            }
          }
        }
      }
    },
    "Get-Performance": {
      "type": "object",
      "required": [
        "filterParams ",
        "searchParams"
      ],
      "properties": {
        "filterParams": {
          "type": "object",
          "properties": {
            "tran_category_type": {
              "type": "string"
            }
          }
        },
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "string"
            },
            "toDate": {
              "type": "date"
            }
          }
        }
      }
    },
    "TeamPastHistory-Graph": {
      "type": "object",
      "required": [
        "tran_category_type ",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "tran_category_type": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "Appoinment-Location": {
      "type": "object",
      "required": [
        "tran_category_type "
      ],
      "properties": {
        "tran_category_type": {
          "type": "string"
        }
      }
    },
    "Reschedule-Appointment": {
      "type": "object",
      "required": [
        "appointTxnId",
        "statusReason",
        "departmentId",
        "roleId",
        "appoint_dtl_id",
        "appoint_date",
        "appoint_start_time",
        "appoint_end_time"
      ],
      "properties": {
        "appointTxnId": {
          "type": "integer"
        },
        "statusReason": {
          "type": "string"
        },
        "departmentId": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "appoint_dtl_id": {
          "type": "integer"
        },
        "appoint_date": {
          "type": "date"
        },
        "appoint_start_time": {
          "type": "string"
        },
        "appoint_end_time": {
          "type": "string"
        }
      }
    },
    "availables-Slot": {
      "type": "object",
      "required": [
        "date",
        "startTime"
      ],
      "properties": {
        "date": {
          "type": "date"
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "Available-Agents": {
      "type": "object",
      "required": [
        "date",
        "startTime",
        "endTime",
        "roleId",
        "mode",
        "location"
      ],
      "properties": {
        "date": {
          "type": "date"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "mode": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "ReAssign-Appoinment": {
      "type": "object",
      "required": [
        "appointTxnId",
        "statusReason",
        "departmentId",
        "roleId",
        "agentId"
      ],
      "properties": {
        "appointTxnId": {
          "type": "integer"
        },
        "statusReason": {
          "type": "string"
        },
        "departmentId": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "agentId": {
          "type": "integer"
        }
      }
    },
    "Appoinment-Events": {
      "type": "object",
      "required": [
        "searchParams",
        "appoinmentTxnId"
      ],
      "properties": {
        "searchParams": {
          "type": "object",
          "properties": {
            "fromDate": {
              "type": "date"
            }
          }
        },
        "appoinmentTxnId": {
          "type": "integer"
        }
      }
    },
    "updateUser": {
      "type": "object",
      "required": [],
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "contactNo": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "pattern": "YYYY-MM-DD",
          "format": "date"
        },
        "officeNo": {
          "type": "integer",
          "format": "int32"
        },
        "extn": {
          "type": "integer",
          "format": "int32"
        },
        "notificationType": {
          "type": "string"
        },
        "biAccess": {
          "type": "boolean"
        },
        "waAccess": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string",
          "format": "base64"
        },
        "activationDate": {
          "type": "string",
          "pattern": "YYYY-MM-DD",
          "format": "date"
        },
        "expiryDate": {
          "type": "string",
          "pattern": "YYYY-MM-DD",
          "format": "date"
        },
        "mappingPayload": {
          "type": "object"
        }
      }
    },
    "createInteraction": {
      "type": "object",
      "required": [
        "customerId",
        "profileId",
        "accountId",
        "serviceId",
        "helpdeskId",
        "chatId",
        "statement",
        "statementId",
        "statementSolution",
        "interactionType",
        "ticketType",
        "serviceType",
        "channel",
        "problemCause",
        "priorityCode",
        "contactPreference",
        "remarks",
        "interactionCategory",
        "serviceCategory",
        "attachment"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "profileId": {
          "type": "integer",
          "format": "int32",
          "description": "If you are not passing customerId, then you need to pass profileId"
        },
        "accountId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "helpdeskId": {
          "type": "integer",
          "format": "int32"
        },
        "chatId": {
          "type": "integer",
          "format": "int32"
        },
        "statement": {
          "type": "string"
        },
        "statementId": {
          "type": "integer",
          "format": "int32"
        },
        "statementSolution": {
          "type": "string"
        },
        "interactionType": {
          "type": "string"
        },
        "ticketType": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "problemCause": {
          "type": "string"
        },
        "priorityCode": {
          "type": "string"
        },
        "contactPreference": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remarks": {
          "type": "string"
        },
        "attachment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "interactionCategory": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        }
      }
    },
    "assignInteraction": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "updateInteraction": {
      "type": "object",
      "required": [
        "userId",
        "roleId",
        "departmentId",
        "status"
      ],
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "departmentId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        }
      }
    },
    "createFollowInteraction": {
      "type": "object",
      "required": [
        "intxnId",
        "remarks"
      ],
      "properties": {
        "intxnId": {
          "type": "integer",
          "format": "int32"
        },
        "remarks": {
          "type": "string"
        }
      }
    },
    "Assign-Interaction": {
      "type": "object",
      "required": [
        "interactionNumber",
        "type",
        "userId"
      ],
      "properties": {
        "interactionNumber": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        }
      }
    },
    "Cancel Interaction": {
      "type": "object",
      "required": [
        "interactionNumber",
        "cancelReason"
      ],
      "properties": {
        "interactionNumber": {
          "type": "string"
        },
        "cancelReason": {
          "type": "string",
          "required": "Cancellation Reason is Mandatory"
        }
      }
    },
    "Interaction-Flow": {
      "type": "object",
      "required": [
        "intxnNo"
      ],
      "properties": {
        "intxnNo": {
          "type": "string"
        }
      }
    },
    "workFlow-Test": {
      "type": "object",
      "required": [
        "intxnUuid"
      ],
      "properties": {
        "intxnUuid": {
          "type": "string"
        }
      }
    },
    "Conversation-Interaction": {
      "type": "object",
      "required": [
        "customerId",
        "isResolvedBy",
        "appointDtlId",
        "rosterId",
        "appointUserId",
        "appointAddress",
        "profileId",
        "accountId",
        "serviceId",
        "helpdeskId",
        "chatId",
        "statement",
        "statementId",
        "statementSolution",
        "interactionType",
        "ticketType",
        "serviceType",
        "channel",
        "problemCause",
        "priorityCode",
        "contactPreference",
        "remarks",
        "interactionCategory",
        "serviceCategory",
        "rcResolution",
        "attachments"
      ],
      "properties": {
        "customerId": {
          "type": "number"
        },
        "isResolvedBy": {
          "type": "string"
        },
        "appointDtlId": {
          "type": "number"
        },
        "rosterId": {
          "type": "number"
        },
        "appointUserId": {
          "type": "number"
        },
        "appointAddress": {
          "type": "object"
        },
        "profileId": {
          "type": "number"
        },
        "accountId": {
          "type": "number"
        },
        "serviceId": {
          "type": "number"
        },
        "helpdeskId": {
          "type": "number"
        },
        "chatId": {
          "type": "number"
        },
        "statement": {
          "type": "string"
        },
        "statementId": {
          "type": "number"
        },
        "statementSolution": {
          "type": "string"
        },
        "interactionType": {
          "type": "string"
        },
        "ticketType": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "problemCause": {
          "type": "string"
        },
        "priorityCode": {
          "type": "string"
        },
        "contactPreference": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "interactionCategory": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "rcResolution": {
          "type": "string"
        },
        "attachments": {
          "type": "string"
        }
      }
    },
    "Create-Request": {
      "type": "object",
      "required": [
        "serviceType",
        "serviceCategory",
        "requestCategory",
        "requestType",
        "entityType",
        "statement",
        "remarks",
        "priorityCode",
        "channel",
        "contactPreference",
        "isResolvedBy"
      ],
      "properties": {
        "isResolvedBy": {
          "type": "string"
        },
        "requestCategory": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "statementSolution": {
          "type": "string"
        },
        "interactionType": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "priorityCode": {
          "type": "string"
        },
        "contactPreference": {
          "type": "number"
        },
        "remarks": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        }
      }
    },
    "Assigned-Interactions": {
      "type": "object",
      "required": [
        "roleId",
        "departmentId",
        "userId",
        "fromDate",
        "toDate",
        "isAllRole",
        "status",
        "intxnType",
        "intxnCat",
        "serviceType",
        "serviceCat",
        "page",
        "limit"
      ],
      "properties": {
        "roleId": {
          "type": "number"
        },
        "departmentId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "isAllRole": {
          "type": "string"
        },
        "status": {
          "type": "array"
        },
        "intxnType": {
          "type": "array"
        },
        "intxnCat": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "page": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        }
      }
    },
    "AssignedToMe-Tickets": {
      "type": "object",
      "required": [
        "roleId",
        "departmentId",
        "userId",
        "fromDate",
        "toDate",
        "entityType",
        "status",
        "intxnType",
        "intxnCat",
        "serviceType",
        "serviceCat",
        "orderType",
        "orderCat",
        "page",
        "limit"
      ],
      "properties": {
        "roleId": {
          "type": "number"
        },
        "departmentId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "entityType": {
          "type": "string"
        },
        "status": {
          "type": "array"
        },
        "intxnType": {
          "type": "array"
        },
        "intxnCat": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "orderType": {
          "type": "array"
        },
        "page": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        }
      }
    },
    "TeamAssigned-Interactions": {
      "type": "object",
      "required": [
        "roleId",
        "departmentId",
        "userId",
        "fromDate",
        "toDate",
        "status",
        "intxnType",
        "intxnCat",
        "serviceType",
        "serviceCat",
        "teamMemberId",
        "page",
        "limit"
      ],
      "properties": {
        "roleId": {
          "type": "number"
        },
        "departmentId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "entityType": {
          "type": "string"
        },
        "status": {
          "type": "array"
        },
        "intxnType": {
          "type": "array"
        },
        "intxnCat": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "orderType": {
          "type": "array"
        },
        "page": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        }
      }
    },
    "TeamAssigned-Orders": {
      "type": "object",
      "required": [
        "roleId",
        "departmentId",
        "userId",
        "fromDate",
        "toDate",
        "type",
        "status",
        "category",
        "serviceType",
        "serviceCat",
        "teamMemberId",
        "page",
        "limit"
      ],
      "properties": {
        "roleId": {
          "type": "number"
        },
        "departmentId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "type": {
          "type": "array"
        },
        "status": {
          "type": "array"
        },
        "category": {
          "type": "array"
        },
        "teamMemberId": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "page": {
          "type": "string"
        },
        "limit": {
          "type": "string"
        }
      }
    },
    "User-InfomativeDetails": {
      "type": "object",
      "required": [
        "entityName",
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "Team-InfomativeDetails": {
      "type": "object",
      "required": [
        "entityName",
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    " Handling-Times": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "Handling Time-Team": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        }
      }
    },
    "Interaction-HistoryGraph": {
      "type": "object",
      "required": [
        "roleId",
        "EntityId",
        "userId",
        "fromDate",
        "toDate",
        "type",
        "serviceType",
        "serviceCategory"
      ],
      "properties": {
        "roleId": {
          "type": "integer"
        },
        "EntityId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "status": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCategory": {
          "type": "array"
        }
      }
    },
    "TeamInteractionHistory-Graph": {
      "type": "object",
      "required": [
        "teamMemberId",
        "roleId",
        "EntityId",
        "userId",
        "fromDate",
        "toDate",
        "serviceType",
        "serviceCategory"
      ],
      "properties": {
        "teamMemberId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "EntityId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCategory": {
          "type": "array"
        }
      }
    },
    "TopFive-Performer": {
      "type": "object",
      "required": [
        "entityName",
        "fromDate",
        "toDate",
        "limit"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "limit": {
          "type": "number"
        }
      }
    },
    "TopFive-Performer-chat": {
      "type": "object",
      "required": [
        "entityName",
        "fromDate",
        "toDate",
        "limit"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "limit": {
          "type": "number"
        }
      }
    },
    "Interaction-Insight": {
      "type": "object",
      "required": [
        "type",
        "requestId",
        "intxnNo",
        "customerUuid",
        "limit",
        "page",
        "channel",
        "customer",
        "solutioned"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "requestId": {
          "type": "number"
        },
        "intxnNo": {
          "type": "string"
        },
        "page": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        },
        "channel": {
          "type": "number"
        },
        "solutioned": {
          "type": "boolean"
        }
      }
    },
    "Interaction-Overview": {
      "type": "object",
      "required": [
        "entityName",
        "fromDate",
        "toDate",
        "userId",
        "roleId",
        "entityId"
      ],
      "properties": {
        "entityName": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "userId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        }
      }
    },
    "Appointment-Overview": {
      "type": "object",
      "required": [
        "type",
        "entityType",
        "fromDate",
        "toDate",
        "teamMemberId",
        "userId",
        "entityId"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "teamMemberIdName": {
          "type": "string"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "userId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        }
      }
    },
    "TeamInteraction-Overview": {
      "type": "object",
      "required": [
        "fromDate",
        "toDate",
        "roleId",
        "userId",
        "entityId"
      ],
      "properties": {
        "roleId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "userId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        }
      }
    },
    "InteractionCategory-Performance": {
      "type": "object",
      "required": [
        "type",
        "limit",
        "fromDate",
        "toDate",
        "roleId",
        "userId",
        "entityId"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "userId": {
          "type": "integer"
        },
        "entityId": {
          "type": "integer"
        }
      }
    },
    "TeamCategory-Performance": {
      "type": "object",
      "required": [
        "teamMemberId",
        "serviceType",
        "fromDate",
        "toDate",
        "roleId",
        "userId"
      ],
      "properties": {
        "teamMemberId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "userId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "string"
        }
      }
    },
    "TeamAssigned-Appoinments": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate",
        "status",
        "serviceType",
        "serviceCat",
        "teamMemberId",
        "page",
        "limit"
      ],
      "properties": {
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "status": {
          "type": "array"
        },
        "teamMemberId": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "page": {
          "type": "string"
        },
        "limit": {
          "type": "string"
        }
      }
    },
    "Top-Performance": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate",
        "limit"
      ],
      "properties": {
        "userId": {
          "type": "number"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "limit": {
          "type": "string"
        }
      }
    },
    " Assigned-Orders": {
      "type": "object",
      "required": [
        "roleId",
        "departmentId",
        "userId",
        "fromDate",
        "toDate",
        "isAllRole",
        "status",
        "orderType",
        "serviceCat",
        "serviceType",
        "orderCat",
        "page",
        "limit"
      ],
      "properties": {
        "roleId": {
          "type": "integer"
        },
        "departmentId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "isAllRole": {
          "type": "string"
        },
        "status": {
          "type": "array"
        },
        "orderType": {
          "type": "array"
        },
        "orderCat": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "page": {
          "type": "string"
        },
        "limit": {
          "type": "string"
        }
      }
    },
    " Assigned-Appoinments": {
      "type": "object",
      "required": [
        "userId",
        "fromDate",
        "toDate",
        "status",
        "serviceCat",
        "serviceType",
        "page",
        "limit"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "fromDate": {
          "type": "date"
        },
        "toDate": {
          "type": "date"
        },
        "status": {
          "type": "array"
        },
        "serviceType": {
          "type": "array"
        },
        "serviceCat": {
          "type": "array"
        },
        "page": {
          "type": "string"
        },
        "limit": {
          "type": "string"
        }
      }
    },
    "Search-Interaction": {
      "type": "object",
      "required": [
        "limit",
        "page",
        "interactionId",
        "interactionNumber",
        "interactionType",
        "customerNo",
        "customerId",
        "profileId",
        "contactNumber",
        "currentUserId",
        "emailId",
        "status",
        "customerName",
        "startDate",
        "endDate",
        "currentRoleId",
        "currentDeptId",
        "selfDept",
        "filters",
        "customerUuid",
        "profileUuid"
      ],
      "properties": {
        "limit": {
          "type": "number"
        },
        "page": {
          "type": "number"
        },
        "searchParams": {
          "type": "object",
          "properties": {
            "interactionId": {
              "type": "number"
            },
            "interactionNumber": {
              "type": "string"
            },
            "interactionType": {
              "type": "string"
            },
            "customerNo": {
              "type": "string"
            },
            "customerId": {
              "type": "number"
            },
            "profileId": {
              "type": "number"
            },
            "contactNumber": {
              "type": "number"
            },
            "currentUserId": {
              "type": "number"
            },
            "emailId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "customerName": {
              "type": "string"
            },
            "startDate": {
              "type": "date"
            },
            "endDate": {
              "type": "date"
            },
            "currentRoleId": {
              "type": "number"
            },
            "currentDeptId": {
              "type": "string"
            },
            "selfDept": {
              "type": "string"
            },
            "filters": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "customerUuid": {
              "type": "string"
            },
            "profileUuid": {
              "type": "string"
            }
          }
        }
      }
    },
    "searchInteraction": {
      "type": "object",
      "required": [],
      "properties": {
        "searchParams": {
          "type": "object",
          "$ref": "#/definitions/searchParams"
        }
      }
    },
    "filters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "searchParams": {
      "type": "object",
      "properties": {
        "interactionId": {
          "type": "integer",
          "format": "int32"
        },
        "interactionType": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "contactNumber": {
          "type": "integer",
          "format": "int32"
        },
        "currentUserId": {
          "type": "integer",
          "format": "int32"
        },
        "emailId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "currentRoleId": {
          "type": "integer",
          "format": "int32"
        },
        "selfDept": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "$ref": "#/definitions/filters"
        }
      }
    },
    "cancelInteraction": {
      "type": "object",
      "required": [
        "cancelReason"
      ],
      "properties": {
        "cancelReason": {
          "type": "string"
        }
      }
    },
    "createWorkflow": {
      "type": "object",
      "required": [
        "workflowName",
        "status",
        "wfDefinition"
      ],
      "properties": {
        "interactionType": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "wfDefinition": {
          "type": "object"
        }
      }
    },
    "createUser": {
      "type": "object",
      "required": [],
      "properties": {
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "userType": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "loc": {
          "type": "string"
        },
        "extn": {
          "type": "integer"
        },
        "contactNo": {
          "type": "integer"
        },
        "whatsappAccess": {
          "type": "boolean"
        },
        "biAccess": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "activationDate": {
          "type": "string",
          "format": "date"
        },
        "mappingPayload": {
          "type": "object"
        }
      }
    },
    "Create-Account": {
      "type": "object",
      "required": [
        "customerUuid",
        "idValue",
        "idType",
        "firstName",
        "lastName",
        " gender",
        "accountCategory",
        "accountType",
        "accountClass",
        "accountLevel",
        "expiryDate",
        "notificationPreference",
        "registeredNo",
        "registeredDate",
        "accountPriority",
        "currency",
        "billLanguage",
        "accountClass",
        "address",
        "contact"
      ],
      "properties": {
        "customerUuid": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "idValue": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "notificationPreference": {
          "type": "string"
        },
        "accountCategory": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountClass": {
          "type": "string"
        },
        "accountLevel": {
          "type": "string"
        },
        "expiryDate": {
          "type": "date"
        },
        "registeredNo": {
          "type": "string"
        },
        "registeredDate": {
          "type": "date"
        },
        "currency": {
          "type": "string"
        },
        "accountPriority": {
          "type": "string"
        },
        "billLanguage": {
          "type": "string"
        },
        "customerClass": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            " billFlag": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "object",
          "properties": {
            "contactType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "contactNo": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "number"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "number"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "number"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            },
            "secondaryEmail": {
              "type": "string"
            },
            "secondaryContactNo": {
              "type": "number"
            }
          }
        },
        "attachment": {
          "type": "string"
        }
      }
    },
    "Get-Accounts": {
      "type": "object",
      "required": [
        "accountUuid",
        "customerUuid",
        "accountNo",
        "accountName",
        "status"
      ],
      "properties": {
        "accountUuid": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "accountNo": {
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    " Update-Account": {
      "type": "object",
      "required": [
        "action",
        "idValue",
        "idType",
        "firstName",
        "lastName",
        " gender",
        "accountCategory",
        "accountType",
        "accountClass",
        "accountLevel",
        "expiryDate",
        "notificationPreference",
        "registeredNo",
        "registeredDate",
        "accountPriority",
        "currency",
        "billLanguage",
        " accountBalance",
        "accountOutstanding",
        "accountStatusReason",
        "address",
        "contact"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "idValue": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "notificationPreference": {
          "type": "string"
        },
        "accountCategory": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountClass": {
          "type": "string"
        },
        "accountLevel": {
          "type": "string"
        },
        "expiryDate": {
          "type": "date"
        },
        "registeredNo": {
          "type": "string"
        },
        "registeredDate": {
          "type": "date"
        },
        "currency": {
          "type": "string"
        },
        "accountPriority": {
          "type": "string"
        },
        "accountOutstanding": {
          "type": "string"
        },
        "accountStatusReason": {
          "type": "string"
        },
        "billLanguage": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "addressNo": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        },
        "contact": {
          "type": "object",
          "properties": {
            "contactType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "contactNo": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "emailId": {
              "type": "string"
            },
            "mobilePrefix": {
              "type": "string"
            },
            "mobileNo": {
              "type": "number"
            },
            "telephonePrefix": {
              "type": "string"
            },
            "telephoneNo": {
              "type": "number"
            },
            "whatsappNoPrefix": {
              "type": "string"
            },
            "whatsappNo": {
              "type": "number"
            },
            "fax": {
              "type": "string"
            },
            "facebookId": {
              "type": "string"
            },
            "instagramId": {
              "type": "string"
            },
            "telegramId": {
              "type": "string"
            },
            "secondaryEmail": {
              "type": "string"
            },
            "secondaryContactNo": {
              "type": "number"
            }
          }
        }
      }
    },
    "Update-Service": {
      "type": "object",
      "required": [
        "action",
        "serviceUuid",
        "serviceName",
        "serviceCategory",
        "serviceType",
        " serviceClass",
        "planPayload",
        "quantity",
        "serviceAgreement",
        "customerUuid",
        "accountUuid",
        "notificationPreference",
        "currency",
        "billLanguage",
        "address"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "serviceUuid": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceClass": {
          "type": "string"
        },
        "planPayload": {
          "type": "string"
        },
        "notificationPreference": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "serviceAgreement": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "accountUuid": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "billLanguage": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "addressNo": {
              "type": "string"
            },
            "addrZone": {
              "type": "string"
            },
            "isPrimary": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetExpiry-Services": {
      "type": "object",
      "required": [
        "accountUuid",
        "customerUuid",
        "serviceUuid",
        "serviceNo",
        "serviceName"
      ],
      "properties": {
        "accountUuid": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "serviceUuid": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        }
      }
    },
    "Create-Service": {
      "type": "object",
      "required": [
        "action",
        "serviceName",
        "serviceCategory",
        "serviceNo",
        "serviceType",
        "serviceClass",
        "planPayload",
        "quantity",
        "notificationPreference",
        "serviceAgreement",
        "customerUuid",
        "currency",
        "billLanguage",
        "address"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceClass": {
          "type": "string"
        },
        "planPayload": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "notificationPreference": {
          "type": "array"
        },
        "serviceAgreement": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "billLanguage": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string"
            },
            "isPrimary": {
              "type": "boolean"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "address3": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "billFlag": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          }
        }
      }
    },
    "Get-Services": {
      "type": "object",
      "required": [
        "accountUuid",
        "customerUuid",
        "serviceUuid",
        "serviceNo",
        "serviceName",
        "status"
      ],
      "properties": {
        "accountUuid": {
          "type": "string"
        },
        "customerUuid": {
          "type": "string"
        },
        "serviceUuid": {
          "type": "integer"
        },
        "serviceNo": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "AccountDetails-History": {
      "type": "object",
      "required": [
        "accountUuid"
      ],
      "properties": {
        "accountUuid": {
          "type": "string"
        }
      }
    },
    " AccountAddress-History": {
      "type": "object",
      "required": [
        "accountUuid"
      ],
      "properties": {
        "accountUuid": {
          "type": "string"
        }
      }
    },
    "approveUser": {
      "type": "object",
      "required": [],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "userType": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "loc": {
          "type": "string"
        },
        "extn": {
          "type": "integer"
        },
        "contactNo": {
          "type": "integer"
        },
        "whatsappAccess": {
          "type": "boolean"
        },
        "biAccess": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "activationDate": {
          "type": "string",
          "format": "date"
        },
        "mappingPayload": {
          "type": "object"
        }
      }
    },
    "searchUser": {
      "type": "object",
      "required": [],
      "properties": {
        "source": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "$ref": "#/definitions/filters"
        }
      }
    },
    "createRequest-Statement": {
      "type": "object",
      "required": [
        "intxnResolution",
        "isDropdown"
      ],
      "properties": {
        "intxnResolution": {
          "type": "string"
        },
        "isDropdown": {
          "type": "string"
        }
      }
    },
    "EditRequest-Statement": {
      "type": "object",
      "required": [
        "intxnResolution",
        "isDropdown"
      ],
      "properties": {
        "intxnResolution": {
          "type": "string"
        },
        "isDropdown": {
          "type": "string"
        }
      }
    },
    "getKnowledgeBase": {
      "type": "object",
      "required": [
        "requestId",
        "customerUuid"
      ],
      "properties": {
        "requestId": {
          "type": "integer"
        },
        "customerUuid": {
          "type": "string"
        },
        "serviceUuid": {
          "type": "string"
        },
        "accountUuid": {
          "type": "string"
        }
      }
    },
    "refreshToken": {
      "type": "object",
      "required": [
        "refreshToken"
      ],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "helpdesk-details": {
      "type": "object",
      "required": [
        "createdAt"
      ],
      "properties": {
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "chat-details": {
      "type": "object",
      "required": [
        "createdAt"
      ],
      "properties": {
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2023-05-15"
        }
      }
    },
    "all-chat-count": {
      "type": "object",
      "required": [
        "chatSource"
      ],
      "properties": {
        "chatSource": {
          "type": "array"
        }
      }
    },
    "verifyUserList": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "$ref": "#/definitions/verifyUser"
        }
      }
    },
    "verifyUser": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "indexId": {
          "type": "number"
        },
        "title": {
          "type": "string",
          "description": "Please use 'Ms', or 'Mr', or 'Mrs' values"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "description": "Please use 'Male', or 'Female' values"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "loc": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "contactNo": {
          "type": "integer"
        },
        "activationDate": {
          "type": "string",
          "format": "date"
        },
        "expiryDate": {
          "type": "string",
          "format": "date"
        },
        "whatsappAccess": {
          "type": "boolean"
        },
        "biAccess": {
          "type": "boolean"
        },
        "validationRemark": {
          "type": "string"
        },
        "validationStatus": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "verify-emailList": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "$ref": "#/definitions/verify-email"
        }
      }
    },
    "verify-email": {
      "type": "object",
      "required": [
        "email",
        "roleDescription",
        "departmentDescription",
        "validationRemark",
        "validationStatus"
      ],
      "properties": {
        "indexId": {
          "type": "number"
        },
        "email": {
          "type": "string"
        },
        "roleDescription": {
          "type": "string"
        },
        "departmentDescription": {
          "type": "string"
        },
        "validationRemark": {
          "type": "string"
        },
        "validationStatus": {
          "type": "string"
        }
      }
    },
    "create-org-child": {
      "type": "object",
      "required": [],
      "properties": {
        "unitroleMapping": {
          "type": "array"
        }
      }
    },
    "createOrganization": {
      "type": "object",
      "required": [
        "unitId",
        "unitDesc",
        "unitType",
        "unitName",
        "parentUnit",
        "mappingPayload"
      ],
      "properties": {
        "unitId": {
          "type": "string"
        },
        "unitDesc": {
          "type": "string"
        },
        "unitType": {
          "type": "string",
          "description": "Please use DEPARTMENT,or ORGANISATION, or OPERTIONALUNIT"
        },
        "unitName": {
          "type": "string"
        },
        "parentUnit": {
          "type": "string"
        },
        "mappingPayload": {
          "type": "object",
          "$ref": "#/definitions/create-org-child"
        }
      }
    },
    "update-org-child": {
      "type": "object",
      "required": [],
      "properties": {
        "unitroleMapping": {
          "type": "array"
        }
      }
    },
    "updateOrganization": {
      "type": "object",
      "required": [
        "unitId",
        "unitDesc",
        "unitType",
        "unitName",
        "status",
        "parentUnit",
        "mappingPayload"
      ],
      "properties": {
        "unitId": {
          "type": "string"
        },
        "unitDesc": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        },
        "unitName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "parentUnit": {
          "type": "string"
        },
        "mappingPayload": {
          "type": "object",
          "$ref": "#/definitions/update-org-child"
        }
      }
    },
    "create-role-child": {
      "type": "object",
      "required": [],
      "properties": {
        "permissions": {
          "type": "array",
          "$ref": "#/definitions/create-rolepermissions"
        }
      }
    },
    "create-rolepermissions": {
      "type": "array",
      "required": [
        "screenName",
        "accessType"
      ],
      "properties": {
        "screenName": {
          "type": "string"
        },
        "accessType": {
          "type": "string"
        },
        "api": {
          "type": "string"
        }
      }
    },
    "createrole": {
      "type": "object",
      "required": [
        "roleName",
        "roleDesc",
        "roleFamilyId",
        "mappingPayload",
        "status"
      ],
      "properties": {
        "roleName": {
          "type": "string"
        },
        "roleDesc": {
          "type": "string"
        },
        "roleFamilyId": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "mappingPayload": {
          "type": "object",
          "$ref": "#/definitions/create-role-child"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "update-role-child": {
      "type": "object",
      "required": [],
      "properties": {
        "permissions": {
          "type": "array",
          "$ref": "#/definitions/update-rolepermissions"
        }
      }
    },
    "update-rolepermissions": {
      "type": "array",
      "required": [
        "screenName",
        "accessType"
      ],
      "properties": {
        "screenName": {
          "type": "string"
        },
        "accessType": {
          "type": "string"
        },
        "api": {
          "type": "string"
        }
      }
    },
    "updaterole": {
      "type": "object",
      "required": [
        "roleName",
        "roleDesc",
        "roleFamilyId",
        "mappingPayload",
        "status"
      ],
      "properties": {
        "roleName": {
          "type": "string"
        },
        "roleDesc": {
          "type": "string"
        },
        "roleFamilyId": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "mappingPayload": {
          "type": "object",
          "$ref": "#/definitions/update-role-child"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "verify-roleList": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "$ref": "#/definitions/verify-role"
        }
        }
      },
      "verify-role": {
        "type": "array",
        "required": [
          "indexId",
          "roleName",
          "roleDescription",
          "status",
          "validationStatus"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": [
              {
                "indexId": {
                  "type": "number"
                }
              },
              {
                "roleName": {
                  "type": "string"
                }
              },
              {
                "roleDescription": {
                  "type": "string"
                }
              },
              {"isAdmin": {
                "type": "boolean"
              }
            },
              {"parentRole": {
                "type": "string"
              }},
              {"status": {
                "type": "string"
              }},
              {"validationRemark": {
                "type": "string"
              }},
              {"validationStatus": {
                "type": "string"
              }}
            ]
          }
        }
      },
      "bulkupload-rolelist": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "List": {
            "type": "array",
            "$ref": "#/definitions/bulkupload-role"
          }
        }
      },
      "rolecounts": {
        "type": "object",
        "required": [
          "success",
          "failed",
          "total"
        ],
        "properties": {
          "success": {
            "type": "number"
          },
          "failed": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "bulkupload-role": {
        "type": "object",
        "required": [
          "indexId",
          "roleName",
          "roleFamilyCode",
          "roleDescription",
          "status",
          "validationStatus"
        ],
        "properties": {
          "indexId": {
            "type": "number"
          },
          "roleName": {
            "type": "string"
          },
          "roleFamilyCode": {
            "type": "string"
          },
          "roleDescription": {
            "type": "string"
          },
          "isAdmin": {
            "type": "string"
          },
          "parentRole": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "validationRemark": {
            "type": "string"
          },
          "validationStatus": {
            "type": "string"
          },
          "counts": {
            "type": "array",
            "$ref": "#/definitions/rolecounts"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "sendmessage-chat": {
        "type": "object",
        "required": [
          "from",
          "senderId"
        ],
        "properties": {
          "from": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "passportID": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "contactNo": {
            "type": "string"
          },
          "serviceNumber": {
            "type": "string"
          },
          "senderID": {
            "type": "string"
          }
        }
      },
      "create-chat": {
        "type": "object",
        "required": [
          "contactNo"
        ],
        "properties": {
          "contactNo": {
            "type": "string"
          },
          "botReq": {
            "type": "string"
          },
          "chatSource": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerInfo": {
            "type": "string"
          }
        }
      },
      "getChatInfo": {
        "type": "object",
        "required": [
          "chatId"
        ],
        "properties": {
          "chatId": {
            "type": "number"
          }
        }
      },
      "chat-createCustomer": {
        "type": "object",
        "required": [
          "firstName",
          "mobileNo",
          "emailId"
        ],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "mobileNo": {
            "type": "number"
          },
          "emailId": {
            "type": "string"
          }
        }
      },
      "chat-getServiceDetails": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "chat-getLookup": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "chat-getChatMenu": {
        "type": "object",
        "required": [
          "menuName"
        ],
        "properties": {
          "menuName": {
            "type": "string"
          }
        }
      },
      "chat-getProducts": {
        "type": "object",
        "required": [
          "serviceType",
          "productCategory",
          "productSubType",
          "type"
        ],
        "properties": {
          "serviceType": {
            "type": "string"
          },
          "productCategory": {
            "type": "string"
          },
          "productSubType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "updateChat": {
        "type": "object",
        "required": [
          "waId",
          "contactNo",
          "emailId",
          "customerName"
        ],
        "properties": {
          "waId": {
            "type": "number"
          },
          "contactNo": {
            "type": "number"
          },
          "emailId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          }
        }
      },
      "chat-inboundMsg": {
        "type": "object",
        "required": [
          "waId"
        ],
        "properties": {
          "waId": {
            "type": "number"
          }
        }
      }
    }
  }
